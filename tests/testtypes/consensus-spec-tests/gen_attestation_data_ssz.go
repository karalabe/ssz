// Code generated by github.com/karalabe/ssz. DO NOT EDIT.

package consensus_spec_tests

import "github.com/karalabe/ssz"

// Cached static size computed on package init.
var staticSizeCacheAttestationData = ssz.PrecomputeStaticSizeCache((*AttestationData)(nil))

// SizeSSZ returns the total size of the static ssz object.
func (obj *AttestationData) SizeSSZ(sizer *ssz.Sizer) uint32 {
	if fork := int(sizer.Fork()); fork < len(staticSizeCacheAttestationData) {
		return staticSizeCacheAttestationData[fork]
	}
	return 8 + 8 + 32 + ssz.Size((*Checkpoint)(nil)) + ssz.Size((*Checkpoint)(nil))
}

// DefineSSZ defines how an object is encoded/decoded.
func (obj *AttestationData) DefineSSZ(codec *ssz.Codec) {
	ssz.DefineUint64(codec, &obj.Slot)                 // Field  (0) -            Slot -  8 bytes
	ssz.DefineUint64(codec, &obj.Index)                // Field  (1) -           Index -  8 bytes
	ssz.DefineStaticBytes(codec, &obj.BeaconBlockHash) // Field  (2) - BeaconBlockHash - 32 bytes
	ssz.DefineStaticObject(codec, &obj.Source)         // Field  (3) -          Source -  ? bytes (Checkpoint)
	ssz.DefineStaticObject(codec, &obj.Target)         // Field  (4) -          Target -  ? bytes (Checkpoint)
}
