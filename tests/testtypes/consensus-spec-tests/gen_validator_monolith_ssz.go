// Code generated by github.com/karalabe/ssz. DO NOT EDIT.

package consensus_spec_tests

import "github.com/karalabe/ssz"

// SizeSSZ returns the total size of the static ssz object.
func (obj *ValidatorMonolith) SizeSSZ(sizer *ssz.Sizer) (size uint32) {
	size = 48 + 32 + 8
	if sizer.Fork() >= ssz.ForkUnknown {
		size += 1
	}
	size += 8 + 8 + 8 + 8
	return size
}

// DefineSSZ defines how an object is encoded/decoded.
func (obj *ValidatorMonolith) DefineSSZ(codec *ssz.Codec) {
	ssz.DefineStaticBytes(codec, &obj.Pubkey)                                                // Field  (0) -                     Pubkey - 48 bytes
	ssz.DefineStaticBytes(codec, &obj.WithdrawalCredentials)                                 // Field  (1) -      WithdrawalCredentials - 32 bytes
	ssz.DefineUint64(codec, &obj.EffectiveBalance)                                           // Field  (2) -           EffectiveBalance -  8 bytes
	ssz.DefineBoolPointerOnFork(codec, &obj.Slashed, ssz.ForkFilter{Added: ssz.ForkUnknown}) // Field  (3) -                    Slashed -  1 bytes
	ssz.DefineUint64(codec, &obj.ActivationEligibilityEpoch)                                 // Field  (4) - ActivationEligibilityEpoch -  8 bytes
	ssz.DefineUint64(codec, &obj.ActivationEpoch)                                            // Field  (5) -            ActivationEpoch -  8 bytes
	ssz.DefineUint64(codec, &obj.ExitEpoch)                                                  // Field  (6) -                  ExitEpoch -  8 bytes
	ssz.DefineUint64(codec, &obj.WithdrawableEpoch)                                          // Field  (7) -          WithdrawableEpoch -  8 bytes
}
